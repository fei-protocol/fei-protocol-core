version: 2.1
orbs:
  discord: antonioned/discord@0.1.0

jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/node:14
    resource_class: xlarge
    steps:
      - checkout 
      - run:
          name: 'Update NPM'
          command: sudo npm install -g npm@6.13.4
      - run:
          name: 'Set caching variables'
          command: |
            LAST_SUCCESSFUL_BUILD_URL="https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/master?filter=successful&limit=1"
            LAST_SUCCESSFUL_COMMIT=`curl -Ss -u "$CIRCLE_TOKEN:" $LAST_SUCCESSFUL_BUILD_URL | jq -r '.[0]["vcs_revision"]'`
            echo $LAST_SUCCESSFUL_COMMIT > /tmp/last-successful-commit
            echo $CIRCLE_SHA1 > /tmp/current-commit
      - restore_cache:
          keys:
            - build-cache-{{ .Branch }}-{{ checksum "/tmp/last-successful-commit" }}
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Compile contracts
          command: npm run compile:hardhat
      - save_cache:
          key: repo-{{ checksum "/home/circleci/project/package-lock.json" }}
          paths:
            - ~/repo
    
  lint:
    docker:
      - image: circleci/node:14
    steps:
      - restore_cache:
          keys:
            - repo-{{ checksum "/home/circleci/project/package-lock.json" }}
      - run:
          name: Run linter
          command: npm run lint
  test:
    working_directory: ~/repo
    docker:
      - image: circleci/node:14
    parallelism: 16
    resource_class: large
    steps:
      - restore_cache:
          keys:
            - repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Run tests
          command: |
            circleci tests glob "test/unit/**/*.ts" | circleci tests split --split-by=filesize > /tmp/tests-to-run
            npm run test:hardhat $(cat /tmp/tests-to-run)
      - store_test_results:
            path: test-results
      - store_artifacts:
            path: test-results

  test-forge:
    working_directory: ~/repo
    machine:
      image: ubuntu-2004:202111-02
    steps:
      - checkout
      - restore_cache:
          keys:
            - repo-{{ checksum "package-lock.json" }}
      - run:
          name: Setup env
          command: echo "export PATH=$PATH:$(pwd)/.circleci" >> /home/circleci/.bashrc
      - run: 
          name: Install Foundry
          command: curl -L https://foundry.paradigm.xyz | bash; source /home/circleci/.bashrc; foundryup 
      - run:
          name: Run tests
          command: source /home/circleci/.bashrc; npm run test

  e2e-test:
    working_directory: ~/repo
    docker:
      - image: circleci/node:14
    parallelism: 5
    resource_class: xlarge
    steps:
      - restore_cache:
          keys:
            - repo-{{ checksum "package-lock.json" }}
      - run:
          name: Run end-to-end tests
          command: |
            circleci tests glob "test/integration/**/*.ts" | circleci tests split --split-by=filesize > /tmp/tests-to-run
            npm run test:e2e $(cat /tmp/tests-to-run)
      - store_test_results:
            path: test-results
      - store_artifacts:
            path: test-results

workflows:
  main:
    jobs:
      - build
      - lint: 
          requires:
            - build
      - test-forge:
          requires:
            - build          
      - test:
          requires:
            - build
      - e2e-test:
          requires:
            - build
